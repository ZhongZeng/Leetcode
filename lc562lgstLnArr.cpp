
/*
Leetcode 562. Longest Line of Consecutive One in Matrix

Companies 
Google 
Related Topics 
Array 

Test Cases:
[[0,1,1,0],[0,1,1,0],[0,0,0,1]]
[]
[[0,1,0],[1,0,0],[0,0,0]]
[[0,0,0,0],[0,0,0,1],[0,0,1,0]]
[[1,1,1,1,0,1,0,1,0,1,1,1,0,0,0,0,1,0,1,1,1,1,1,0,0,1,0,1,1,1],[1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,0,1,1,1,0,1,0,1,1,1,1,1,1],[1,1,1,0,1,0,0,1,0,1,0,1,0,1,1,1,0,0,0,1,1,0,0,0,0,0,1,1,0,0],[1,0,1,1,1,1,0,0,1,0,1,0,1,0,1,1,0,0,1,0,1,0,1,0,1,1,0,0,0,1],[1,1,1,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1],[0,1,1,1,1,1,1,1,1,1,1,0,1,1,0,0,1,1,1,1,1,1,1,1,0,1,0,1,0,0],[0,1,0,1,1,0,1,1,1,0,1,1,0,1,1,1,1,1,0,1,0,1,1,1,0,1,1,1,1,1],[1,1,1,1,1,1,0,1,0,1,1,1,1,1,0,1,0,1,1,1,1,1,0,1,1,1,1,0,0,1],[0,1,0,0,1,1,0,1,1,0,0,1,1,0,1,0,0,1,1,1,0,0,1,1,1,1,0,1,0,1],[1,0,1,1,0,1,1,1,1,1,1,1,1,0,0,0,1,1,0,1,1,1,1,1,0,0,0,1,1,1],[1,1,1,1,0,0,1,1,1,1,0,0,1,1,0,1,0,1,1,1,0,1,1,0,0,1,0,1,1,1],[1,1,0,0,0,0,1,1,0,1,1,1,0,0,1,1,0,1,1,1,0,1,0,1,1,0,1,0,1,0],[0,0,1,1,1,1,1,1,1,0,1,0,1,0,1,0,1,0,1,1,1,1,0,1,1,0,0,1,0,0],[0,0,0,1,1,1,0,1,1,0,0,1,0,1,1,1,0,0,1,1,0,0,1,1,1,1,1,1,0,0],[1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1],[1,1,1,1,0,0,0,1,0,1,0,1,1,1,0,0,0,0,1,0,1,0,1,1,1,1,1,1,1,1],[0,1,0,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,0,1,0,1,0,0,1,0,1,0],[1,0,1,1,0,1,0,1,1,1,1,1,0,0,0,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1],[1,1,1,0,1,0,1,1,0,0,1,0,1,1,1,1,0,1,1,0,1,0,0,1,0,0,1,1,1,1],[1,1,1,0,0,1,1,0,1,1,1,1,0,1,0,1,1,1,0,1,0,1,0,1,1,1,0,0,1,1],[1,1,1,1,1,1,0,1,1,0,1,0,1,0,1,1,0,1,1,1,0,1,0,0,1,1,0,1,1,0],[1,0,1,1,0,1,1,1,1,1,1,0,1,1,1,1,0,1,1,0,0,0,1,1,1,1,1,1,1,1],[1,0,1,0,0,1,0,1,1,1,0,1,1,1,1,1,1,0,1,1,1,0,1,1,1,1,0,0,0,1],[0,0,1,0,0,0,0,1,1,0,0,1,1,1,1,0,1,1,0,1,1,1,0,1,1,0,1,1,1,1],[1,0,0,1,1,0,1,1,1,0,0,1,1,0,0,1,1,1,1,1,0,1,0,1,0,1,0,1,1,1],[0,1,1,1,1,0,1,0,1,0,1,0,1,1,1,0,1,0,1,1,1,0,1,1,1,0,1,0,1,1],[1,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,0,1,1,0,0,1,0,0,1,0,1,1,1],[1,1,0,1,1,1,1,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,1,0,1,1,1,0,1,1],[0,1,0,1,1,1,1,1,1,1,0,1,1,1,1,0,1,0,0,1,1,1,0,1,1,1,1,1,1,0],[1,1,0,1,1,0,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,0,0,0]]

Next challenges: Search in Rotated Sorted Array II,
Split Array with Equal Sum, My Calendar I

Runtime: 38 ms
Your runtime beats 87.73 % of cpp submissions.

*/

class Solution {
public:
    int longestLine(vector<vector<int>>& M) {
        // O(n*m)
        // design simple test case for each line
        if(M.size()<1||M[0].size()<1)   return 0;
        int mx=0, t;
        for(int i=0; i<M.size(); i++){// rows
            t=0;
            for(int j=0; j<M[i].size(); j++){
                if(M[i][j]==1){
                    t++;
                }else{
                    mx=mx<t?t:mx;
                    t=0;
                }
            }
            mx=mx<t?t:mx;
        }
        
        for(int j=0; j<M[0].size(); j++){// columns
            t=0;
            for(int i=0; i<M.size(); i++){
                if(M[i][j]==1){
                    t++;
                }else{
                    mx=mx<t?t:mx;
                    t=0;
                }
            }
            mx=mx<t?t:mx;
        }        
        
        for(int i=0; i<M.size(); i++){// from 1st column 
            t=0;// diagonals 
            for(int j=0; i+j<M.size()&&j<M[0].size(); j++){
                if(M[i+j][j]==1){
                    t++;
                }else{
                    mx=mx<t?t:mx;
                    t=0;
                }
            }
            mx=mx<t?t:mx;
            
            t=0;// anti-diagonals 
            for(int j=0; -1<i-j&&j<M[0].size(); j++){
                if(M[i-j][j]==1){
                    t++;
                }else{
                    mx=mx<t?t:mx;
                    t=0;
                }
            }
            mx=mx<t?t:mx;            
        }

        for(int j=0; j<M[0].size(); j++){// from 1st row 
            t=0;// diagonals 
            for(int i=0; i<M.size()&&i+j<M[0].size(); i++){
                if(M[i][i+j]==1){
                    t++;
                }else{
                    mx=mx<t?t:mx;
                    t=0;
                }
            }
            mx=mx<t?t:mx;
            
            t=0;// anti-diagonals 
            for(int i=M.size()-1; -1<i&&j+M.size()-1-i<M[0].size(); i--){
                if(M[i][j+M.size()-1-i]==1){
                    t++;
                }else{
                    mx=mx<t?t:mx;
                    t=0;
                }
            }
            mx=mx<t?t:mx;
        }

        return mx;
    }
};
