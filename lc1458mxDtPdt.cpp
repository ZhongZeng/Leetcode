/*
1458. Max Dot Product of Two Subsequences

Company	Microsoft
Related Topics	Dynamic Programming

Test Cases:
[-5,3,-5,-3,1]
[-2,4,2,5,-5]
[2,1,-2,5]
[3,0,-6]
[3,-2]
[2,-6,7]
[-1,-1]
[1,1]
[345,-965,12,39,469,514,-251,-292,-490,-169,752,522,-772,-219,617,-75,-338,897,378,549,333,412,-800,940,-435,-798,-22,145,809,-94,966,68,458,332,910,60,120,-663,-440,-77,-513,-729,972,425,413,-884,-526,-374,793,-287,222,733,-54,-165,-512,-646,-194,737,57,-412,-928,-631,850,-941,-120,-387,-29,10,26,731,91,358,620,-356,742,-389,-927,-735,40,-762,388,745,-574,938,157,172,-525,-597,-307,446,-27,931,-233,811,670,-36,348,553,-462,5,92,641,814,291,-54,941,-221,-200,423,608,-98,782,275,-679,329,371,-36,-315,-679,-731,783,667,-887,12,761,603,628,-122,641,442,721,673,853,424,892,117,149,-681,512,146,15,903,374,999,-47,-485,212,907,-361,886,-645,168,-104,-817,377,-784,-72,515,-293,64,-975,380,-239,407,-447,-339,-256,202,358,848,-697,513,440,936,-216,452,-925,-429,914,940,-176,175,49,-971,825,475,77,-40,-345,22,-762,-988,579,23,6,-908,248,-107,699,938,-960,-8,-654,772,-804,375,-302,362,105,-37,451,511,-595,775,854,672,285,695,993,-565,538,-431,-939,-261,890,-879,955,-191,-544,830,-460,-275,282,514,-575,781,748,301,-526,-443,43,-142,-228,872,-313,-770,265,-846,-546,-43,-281,427,-311,636,416,-830,-122,758,-879,-745,-415,883,-788,772,381,-529,-466,179,418,881,229,634,-540,5,127,384,-595,-94,-854,892,746,-978,295,-599,803,-624,719,-43,-725,442,919,-94,51,-349,831,-961,-486,-308,888,-159,401,433,-889,-255,760,915,91,-145,-748,-874,-919,-602,-119,185,471,97,-889,-181,-184,-200,-411,928,-363,601,248,-961,-965,-771,348,-336,822,776,-872,-177,150,-500,160,-787,-364,-412,-119,295,585,-118,-47,-266,-224,260,744,398,-439,-399,-793,-529,-836,-360,-989,129,-523,-298,-898,665,408,671,403,-340,-684,-766,-709,787,258,674,873,-652,192,33,-579,-477,571,139,268,-677,-981,958,112,170,-559,747,518,-401,-611,455,196,-839,-806,593,-780,-572,-1,-594,-815,134]
[673,752,-412,-794,-394,-29,281,-587,980,-40,224,-877,626,-453,-132,-63,-171,730,84,784,-494,-436,-241,421,16,-362,859,-368,953,277,608,-450,-42,971,-303,-960,548,890,-847,-836,-245,993,320,870,-647,-211,329,-451,120,664,910,-973,834,-903,-664,-699,316,452,857,-382,792,-694,646,627,970,-523,-235,841,244,385,859,420,202,86,-719,-15,729,875,-391,146,75,-857,-555,-560,614,34,-861,-307,-769,485,-699,257,-309,150,-419,-741,-43,533,-431,686,599,-782,-78,-40,690,-909,-305,197,380,-156,40,-904,564,-78,-142,-281,-264,-834,686,228,-757,381,-469,710,314,-585,169,-711,-687,-250,-28,-67,-965,759,377,320,773,429,92,665,473,736,-822,-908,-906,-183,670,326,814,270,338,297,534,-817,-258,935,34,-99,-638,-320,-577,595,-905,-97,153,777,936,470,201,-870,-160,-436,659,-763,-590,279,455,-297,-518,-459,-104,-253,275,-283,-517,-817,-893,-262,-746,644,-873,299,158,-731,260,335,557,748,991,-693,731,-157,497,416,-558,5,591,-665,996,483,62,813,720,547,349,-699,-740,-886,-685,271,57,959,-156,-22,633,-586,534,48,832,681,-538,418,-361,97,-579,515,-638,-148,-192,-222,267,-874,-484,-400,-192,-956,596,283,-934,901,561,-855,703,-570,-407,-516,-757,40,630,255,-907,232,695,-838,196,-413,708,-651,10,487,963,-779,738,314,-279,125,382,-402,6,812,-783,-453,-341,848,-18,-73,620,418,-357,-985,184,71,598,404,746,-761,989,-641,-859,382,793,532,-57,324,-39,153,724,-9,-910,-759,464,46,-562,-207,-741,-563,815,-189,531,392,4,-133,226,-873,465,280,761,-30,730,803,-696,-715,940,-63,-276,628,-98,-362,-931,548,-196,658,-888,924,-936,426,522,342,-286,-726,-283,-170,-446,258,376,-368,-406,959,-739,481,986,694,-580,-773,-314,-364,-452,-978,-813,173,-163,235,-525,429,293,672,-217,-431,-507,75,758,996,437,365,388,340,-286,-434,781,287,179,-720,648,432,-27,-442,-446,-297,893,-44,329,999,-89,349,412,-721,-641,-860,-149,-206,-511,565,411,-561,527,310,576,-965,-868,-405,200,543,530,755,-851,-786,-306,-604,-851,-933,-610,29,-828,404,622,-80,603,5,-744,782,-297,-479,-718,-947,602,-306,-27,945,-206,899,19,-418,35,905,879,-24,-781,-2,929,168,652]


Runtime: 32 ms, faster than 50.00% of C++ online submissions for Max Dot Product of Two Subsequences.
Runtime: 40 ms, faster than 25.00% of C++ online submissions for Max Dot Product of Two Subsequences.
Memory Usage: 13.3 MB, less than 100.00% of C++ online submissions for Max Dot Product of Two Subsequences.
Memory Usage: 13.1 MB, less than 100.00% of C++ online submissions for Max Dot Product of Two Subsequences.
Next challenges: Unique Paths, Bitwise ORs of Subarrays, Minimum Falling Path Sum
*/

class Solution {
public:
    int maxDotProduct(vector<int>& nums1, vector<int>& nums2) {
        // Dynamic Programming, O(n*m) time
        vector<vector<int>> dp(nums1.size()+1, vector<int> (nums2.size()+1, 0));
        // dp[i][j]=maxDotProduct( nums1[0,i), nums2[0,j) ); subsequence is nonempty, except i==0||j==0
        for( int i=0; i<nums1.size(); i++){
            for( int j=0; j<nums2.size(); j++){
                int mx=nums1[i]*nums2[j];// initialization
                if(0<i) mx=max( mx, dp[i][j+1]);
                if(0<j) mx=max( mx, dp[i+1][j]);
                if(0<i&&0<j)    mx=max( mx, dp[i][j]+max(0,nums1[i]*nums2[j]));
                dp[i+1][j+1]=mx;
            }
        }
        return dp.back().back();
    }
};