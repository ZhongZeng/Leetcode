/*
368. Largest Divisible Subset
Medium
Companies	Amazon
Related Topics	Math, Dynamic Programming

Test Cases:
[1,2,3]
[3,4,16,8]
[849,61,224,453,433,257,282,93,826,441,164,854,195,506,628,916,197,340,482,305,721,412,542,719,947,333,472,48,514,168,64,362,580,288,814,364,544,448,809,888,972,927,434,830,554,349,26,894,682,966,594,36,540,556,508,587,69,27,651,782,958,290,596,321,185,395,129,258,634,184,67,737,415,11,982,597,692,190,915,335,81,470,842,668,538,868,670,320,825,311,267,497,495,13,626,752,646,430,935,63,24,73,5,426,764,304,967,31,638,400,500,831,419,390,698,88,874,398,679,370,244,691,347,996,688,776,751,657,932,614,14,710,730,317,28,760,306,427,611,136,845,352,284,58,681,90,277,132,126,624,171,253,905,273,443,914,205,408,489,243,293,600,900,720,211,35,564,562,219,848,326,880,767,54,899,531,131,421,784,694,578,949,898,985,875,163,469,455,425,368,526,635,754,442,549,324,641,226,951,520,992,356,242,887,158,663,545,599,605,583,71,119,891,573,610,451,363,892,686,532,296,988,51,344,529,582,940,543,603,836,201,33,135,103,895,346,897,79,955,249,318,238,355,769,615,695,254,953,783,971,325,925,575,125,111,428,566,505,263,648,217,994,886,231,503,593,999,287,521,723,676,473,857,998,716,533,922,795,107,8,174,513,436,285,447,653,630,890,860,484,210,768,203,235,792,270,65,462,673,464,846,101,334,780,286,718,762,175,577,245,138,901,867,571,161,714,280,106,592,778,968,413,420,746,225,153,883,372,62,422,281,265,358,209,206,677,621,181,367,437,978,530,693,683,417,547,183,609,689,463,823,440,861,745,1000,418,620,598,338,34,581,704,110,55,738,595,380,744,45,743,471,817,52,632,815,264,742,222,353,396,765,386,486,360,766,567,980,310,664,404,841,118,906,876,169,800,525,700,893,98,53,859,493,330,528,945,511,173,747,576,758,939,15,725,250,601,302,50,354,116,522,872,402,777,49,30,202,930,40,631,822,796,130,47,82,699,303,25,833,248,678,481,444,384,75,666,127,705,749,948,240,941,991,804,394,452,828,23,636,866,799,633,917,759,665,707,501,608,492,454,411,237,590,541,16,856,862,843,9,476,539,929,586,946,644,684,755,6,260,124,438,516,713,409,728,546,771,753,877,834,697,869,675,165,60,934,289,801,1,896,496,339,100,128,642,827,943,504,154,21,565,309,806,661,660,741,969,824,460,507,379,407,120,990,43,272,918,337,239,331,669,790,152,791,97,658,643,902,750,572,793,327,650,625,855,936,498,458,156,207,727,920,510,445,536,38,230,294,871,708,779,218,908,315,179,873,142,724,524,907,416,802,431,191,76,960,241,385,348,259,187,7,853,923,397,810,359,560,405,952,91,449,973,299,913,485,674,414,266,149,84,942,208,588,993,680,4,392,166,612,839,95,712,619,275,772,702,931,247,818,735,561,711,557,151,864]

Runtime: 60 ms, faster than 30.55% of C++ online submissions for Largest Divisible Subset.
Memory Usage: 9.3 MB, less than 24.16% of C++ online submissions for Largest Divisible Subset.
Next challenges: Reach a Number, Handshakes That Don't Cross, Stone Game II
*/

class Solution {
public:
    vector<int> largestDivisibleSubset(vector<int>& nums) {
        // O(n*n) time; Dynamic Programming, Math 
        if(nums.size()<1)   return {};
        int mx=0;
        vector<int> rt;
        vector<pair<int,int>> vc;// length, previous vaue
        
        sort( nums.begin(), nums.end());
        
        for( int i=0; i<nums.size(); i++){
            int pre=-1;
            for( int j=0; j<i; j++)
                if(nums[i]%nums[j]==0&&(pre==-1||vc[pre].second<vc[j].second))
                    pre=j;
            vc.push_back(make_pair(1+(pre!=-1?vc[pre].first:0), pre));
        }
        
        for( int i=0; i<vc.size(); i++)
            if(vc[mx].first<vc[i].first)    mx=i;
        
        for( int i=mx; i!=-1; i=vc[i].second)
            rt.push_back(nums[i]);
        
        return rt;
    }
};